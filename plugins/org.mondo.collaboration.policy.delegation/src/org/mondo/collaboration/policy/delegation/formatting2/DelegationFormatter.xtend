/*
 * generated by Xtext 2.13.0
 */
package org.mondo.collaboration.policy.delegation.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.mondo.collaboration.policy.delegation.delegation.Delegation
import org.mondo.collaboration.policy.delegation.delegation.DelegationModel
import org.mondo.collaboration.policy.delegation.services.DelegationGrammarAccess
import org.mondo.collaboration.policy.formatting2.RulesFormatter
import org.mondo.collaboration.policy.rules.Binding

class DelegationFormatter extends RulesFormatter {
	
	@Inject extension DelegationGrammarAccess

	def dispatch void format(DelegationModel delegationModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		delegationModel.getImport.format;
		for (Delegation delegation : delegationModel.getDelegations()) {
			delegation.format;
		}
	}

	def dispatch void format(Delegation delegation, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		delegation.getAsset.format;
		for (Binding binding : delegation.getBindings()) {
			binding.format;
		}
	}
	
	// TODO: implement for 
}

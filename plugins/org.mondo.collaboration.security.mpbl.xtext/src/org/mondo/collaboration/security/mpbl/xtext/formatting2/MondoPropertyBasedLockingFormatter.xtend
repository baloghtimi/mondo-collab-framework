/*
 * generated by Xtext 2.14.0
 */
package org.mondo.collaboration.security.mpbl.xtext.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.mondo.collaboration.security.mpbl.xtext.mondoPropertyBasedLocking.Lock
import org.mondo.collaboration.security.mpbl.xtext.mondoPropertyBasedLocking.PropertyBasedLockingModel
import org.mondo.collaboration.security.mpbl.xtext.services.MondoPropertyBasedLockingGrammarAccess

class MondoPropertyBasedLockingFormatter extends AbstractFormatter2 {
	
	@Inject extension MondoPropertyBasedLockingGrammarAccess

	def dispatch void format(PropertyBasedLockingModel propertyBasedLockingModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (role : propertyBasedLockingModel.roles) {
			role.format
		}
		for (lock : propertyBasedLockingModel.locks) {
			lock.format
		}
	}

	def dispatch void format(Lock lock, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (binding : lock.bindings) {
			binding.format
		}
	}
	
	// TODO: implement for Binding
}

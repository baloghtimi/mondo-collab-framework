/*
 * generated by Xtext 2.14.0
 */
grammar InternalMondoPropertyBasedLocking;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.mondo.collaboration.security.mpbl.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.mondo.collaboration.security.mpbl.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.mondo.collaboration.security.mpbl.xtext.services.MondoPropertyBasedLockingGrammarAccess;

}

@parser::members {

 	private MondoPropertyBasedLockingGrammarAccess grammarAccess;

    public InternalMondoPropertyBasedLockingParser(TokenStream input, MondoPropertyBasedLockingGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "PropertyBasedLockingModel";
   	}

   	@Override
   	protected MondoPropertyBasedLockingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePropertyBasedLockingModel
entryRulePropertyBasedLockingModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyBasedLockingModelRule()); }
	iv_rulePropertyBasedLockingModel=rulePropertyBasedLockingModel
	{ $current=$iv_rulePropertyBasedLockingModel.current; }
	EOF;

// Rule PropertyBasedLockingModel
rulePropertyBasedLockingModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropertyBasedLockingModelAccess().getPropertyBasedLockingModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyBasedLockingModelAccess().getRolesRoleParserRuleCall_1_0());
				}
				lv_roles_1_0=ruleRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyBasedLockingModelRule());
					}
					add(
						$current,
						"roles",
						lv_roles_1_0,
						"org.mondo.collaboration.security.mpbl.xtext.MondoPropertyBasedLocking.Role");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='locks'
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertyBasedLockingModelAccess().getLocksKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPropertyBasedLockingModelAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyBasedLockingModelAccess().getLocksLockParserRuleCall_4_0());
				}
				lv_locks_4_0=ruleLock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyBasedLockingModelRule());
					}
					add(
						$current,
						"locks",
						lv_locks_4_0,
						"org.mondo.collaboration.security.mpbl.xtext.MondoPropertyBasedLocking.Lock");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPropertyBasedLockingModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current; }
	EOF;

// Rule Role
ruleRole returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRoleAccess().getUserParserRuleCall_0());
		}
		this_User_0=ruleUser
		{
			$current = $this_User_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRoleAccess().getGroupParserRuleCall_1());
		}
		this_Group_1=ruleGroup
		{
			$current = $this_Group_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUser
entryRuleUser returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserRule()); }
	iv_ruleUser=ruleUser
	{ $current=$iv_ruleUser.current; }
	EOF;

// Rule User
ruleUser returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='user'
		{
			newLeafNode(otherlv_0, grammarAccess.getUserAccess().getUserKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getGroupAccess().getUsersUserCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getGroupAccess().getUsersUserCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLock
entryRuleLock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLockRule()); }
	iv_ruleLock=ruleLock
	{ $current=$iv_ruleLock.current; }
	EOF;

// Rule Lock
ruleLock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLockRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getLockAccess().getOwnerRoleCrossReference_0_0());
				}
			)
		)
		otherlv_1='lock'
		{
			newLeafNode(otherlv_1, grammarAccess.getLockAccess().getLockKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLockAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='query'
		{
			newLeafNode(otherlv_3, grammarAccess.getLockAccess().getQueryKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLockRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getLockAccess().getPatternPatternCrossReference_4_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLockAccess().getBindingsBindingParserRuleCall_5_0());
				}
				lv_bindings_5_0=ruleBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLockRule());
					}
					add(
						$current,
						"bindings",
						lv_bindings_5_0,
						"org.mondo.collaboration.security.mpbl.xtext.MondoPropertyBasedLocking.Binding");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLockAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='bind'
		{
			newLeafNode(otherlv_0, grammarAccess.getBindingAccess().getBindKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getBindingAccess().getParamVariableCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingAccess().getValueBindParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.mondo.collaboration.security.mpbl.xtext.MondoPropertyBasedLocking.Bind");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBind
entryRuleBind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindRule()); }
	iv_ruleBind=ruleBind
	{ $current=$iv_ruleBind.current; }
	EOF;

// Rule Bind
ruleBind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBindAccess().getObjectBindParserRuleCall_0());
		}
		this_ObjectBind_0=ruleObjectBind
		{
			$current = $this_ObjectBind_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBindAccess().getValueBindParserRuleCall_1());
		}
		this_ValueBind_1=ruleValueBind
		{
			$current = $this_ValueBind_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBindAccess().getRoleBindParserRuleCall_2());
		}
		this_RoleBind_2=ruleRoleBind
		{
			$current = $this_RoleBind_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRoleBind
entryRuleRoleBind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleBindRule()); }
	iv_ruleRoleBind=ruleRoleBind
	{ $current=$iv_ruleRoleBind.current; }
	EOF;

// Rule RoleBind
ruleRoleBind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='role'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoleBindAccess().getRoleKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoleBindRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRoleBindAccess().getRoleRoleCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleValueBind
entryRuleValueBind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueBindRule()); }
	iv_ruleValueBind=ruleValueBind
	{ $current=$iv_ruleValueBind.current; }
	EOF;

// Rule ValueBind
ruleValueBind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='value'
		{
			newLeafNode(otherlv_0, grammarAccess.getValueBindAccess().getValueKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getValueBindAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueBindRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleObjectBind
entryRuleObjectBind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectBindRule()); }
	iv_ruleObjectBind=ruleObjectBind
	{ $current=$iv_ruleObjectBind.current; }
	EOF;

// Rule ObjectBind
ruleObjectBind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='object'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectBindAccess().getObjectKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectBindRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getObjectBindAccess().getObjectEObjectCrossReference_1_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
